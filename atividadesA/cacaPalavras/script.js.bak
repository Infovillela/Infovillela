// script.js
/*let timer = 0;
let intervalId = 0;
let startTime = 0;
let isRunning = false;
let countdownTime = 0; // new variable to store the countdown time

document.getElementById('start-button').addEventListener('click', startTimer);
document.getElementById('pause-button').addEventListener('click', pauseTimer);
document.getElementById('reset-button').addEventListener('click', resetTimer);

// Add event listeners to pre-determined times
document.querySelectorAll('input[name="time"]').forEach((radioButton) => {
	radioButton.addEventListener('click', (event) => {
		const timeValue = event.target.value;
		countdownTime = timeValue * 60; // set the countdown time in seconds
		startTime = new Date().getTime();
		timer = countdownTime;
		document.getElementById('timer').innerHTML = formatTime(countdownTime);
		startTimer();
	});
});

function startTimer() {
	if (!isRunning) {
		intervalId = setInterval(updateTimer, 1000);
		isRunning = true;
	}
}

function pauseTimer() {
	if (isRunning) {
		clearInterval(intervalId);
		isRunning = false;
	}
}

function resetTimer() {
	timer = 0;
	countdownTime = 0;
	document.getElementById('timer').innerHTML = '00:00';
}

function updateTimer() {
	const currentTime = new Date().getTime();
	timer -= 1; // decrement the timer by 1 second
	if (timer <= 0) {
		pauseTimer();
		document.getElementById('timer').innerHTML = '00:00';
	} else {
		document.getElementById('timer').innerHTML = formatTime(timer);
	}
}

function formatTime(time) {
	const minutes = Math.floor(time / 60);
	const seconds = time % 60;
	return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
}

let score = 0.0;
let scoreB = 0.0;

function updateScoreDisplay() {
	document.getElementById('score').innerHTML = score.toFixed(1);
    
}

function updateScoreDisplayB() {
	
    document.getElementById('scoreB').innerHTML = scoreB.toFixed(1);
}

document.getElementById('reset-score-button').addEventListener('click', resetScore);

function resetScore() {
	score = 0.0;
    scoreB = 0.0;
    updateScoreDisplay();
    updateScoreDisplayB();


}

document.querySelectorAll('.circular-button').forEach((button, index) => {
    button.addEventListener('click', () => {
      if (index === 0) {
        score += 3;
      } else if (index === 1) {
        score += 2;
      } else if (index === 2) {
        score += 1;
      } else if (index === 3) {
        score += 0.5;
      } else if (index === 4) {
        score += 0.5;
      }

      updateScoreDisplay();
    });
  });

  document.querySelectorAll('.circular-buttonB').forEach((button, index) => {
    button.addEventListener('click', () => {
      if (index === 0) {
        scoreB += 3;
      } else if (index === 1) {
        scoreB += 2;
      } else if (index === 2) {
        scoreB += 1;
      } else if (index === 3) {
        scoreB += 0.5;
      } else if (index === 4) {
        scoreB += 0.5;
      }

      updateScoreDisplayB();
    });
  });*/

  document.querySelectorAll('.color-button').forEach((button) => {
    button.addEventListener('click', () => {
      button.classList.toggle('clicked');
    });
  });

  